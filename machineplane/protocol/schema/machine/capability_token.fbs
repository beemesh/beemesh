namespace beemesh.machine;

// Represents the core capability being delegated
table Capability {
  type: string;              // e.g. "KeyShareRequest"
  task_id: string;           // ID of the task
  required_quorum: uint8;    // Minimum shares required
  issued_at: uint64;         // UNIX timestamp
  expires_at: uint64;        // Optional expiry
  issuer_peer_id: string;    // Issuer's PeerId
}

// Restricts or delegates the capability
table Caveat {
  condition_type: string;    // e.g. "authorized_peer", "expires_before"
  value: [ubyte];            // Encoded value (PeerId, timestamp, etc.)
}

// Signature over the cumulative state up to this point
table SignatureEntry {
  signer_peer_id: string;    // Who signed this stage
  public_key: [ubyte];       // Raw public key bytes
  signature: [ubyte];        // Signature bytes
}

// The full capability token, including delegation and verification chain
table CapabilityToken {
  root_capability: Capability;
  caveats: [Caveat];
  signature_chain: [SignatureEntry];
}

root_type CapabilityToken;
